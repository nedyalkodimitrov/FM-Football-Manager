<?php

namespace AppBundle\Repository\PlayerProperties;

use AppBundle\Entity\PlayerProperties\WaterGlasses;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Component\Validator\Mapping\ClassMetadata;

/**
 * WaterGlassesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WaterGlassesRepository extends \Doctrine\ORM\EntityRepository
{

    public function __construct(EntityManagerInterface $em)
    {
        parent::__construct($em, new \Doctrine\ORM\Mapping\ClassMetadata(WaterGlasses::class));
    }

    public function getWaterGlassesByUserDESC($userId){
       return $this->_em
            ->getRepository(WaterGlasses::class)
            ->findBy(['playerId' => $userId], [ 'id' => 'DESC']);
    }

    public function getWaterGlassesByUserASC($userId){
        return $this->_em
            ->getRepository(WaterGlasses::class)
            ->findBy(['playerId' => $userId], [ 'id' => 'ASC']);
    }

    public function setWaterGlass($player, $date){
        $waterGlass = new WaterGlasses();
        $waterGlass->setPlayerId($player);
        $waterGlass->setDate($date);
        $waterGlass->setWaterGlasses(0);
        $this->save($waterGlass);
    }

    public function save( WaterGlasses $waterGlass){
        $this->_em->persist($waterGlass);
        $this->_em->flush();
    }

    public function getLastWaterGlass($playerId){
        $waterGlasses = $this->_em->getRepository(WaterGlasses::class)
            ->findBy(['playerId' => $playerId], [ 'id' => 'DESC']);
        return $waterGlasses[0];
    }



}
